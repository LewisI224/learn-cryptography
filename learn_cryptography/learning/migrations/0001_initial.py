# Generated by Django 4.0.1 on 2022-03-16 16:11

from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0004_alter_taggeditem_content_type_alter_taggeditem_tag'),
    ]

    operations = [
        migrations.CreateModel(
            name='LearningModules',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='Module Title', max_length=100)),
                ('image', models.CharField(default='/learning/default.jpg', max_length=100)),
                ('description', models.TextField(default='A short description of the module content')),
                ('difficulty', models.CharField(choices=[('Beginner', 'BEGINNER'), ('Intermediate', 'INTERMEDIATE'), ('Advanced', 'ADVANCED ')], default='BEGINNER', max_length=15)),
                ('time', models.IntegerField(default=0)),
                ('difficultyNumber', models.IntegerField(default=0)),
                ('suggestedOrder', models.IntegerField(default=0)),
                ('learningPage', models.CharField(default='default', max_length=100)),
                ('pagePath', models.CharField(default='error404', max_length=100)),
                ('quizPath', models.CharField(default='quiz', max_length=100)),
                ('text', models.TextField(default='The learning content for the module with each page seperated witha colon;')),
                ('glossary', models.TextField(default='A list of technical words and their definitions')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='title', max_length=120)),
                ('assosPage', models.CharField(default='Page Path', max_length=120)),
                ('htmlPage', models.CharField(default='HTML Path', max_length=120)),
                ('number_of_questions', models.IntegerField()),
                ('required_score_to_pass', models.IntegerField(help_text='required score in %')),
                ('module', models.OneToOneField(default='', on_delete=django.db.models.deletion.CASCADE, to='learning.learningmodules')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='title', max_length=100)),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='learning.quiz')),
            ],
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=200)),
                ('correct', models.BooleanField(default=False)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='learning.question')),
            ],
        ),
    ]
